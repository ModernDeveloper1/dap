{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","styles/globalStyles.js","App.js","second.js","reportWebVitals.js","fonts/RenoMono.otf","fonts/upheavtt.ttf","fonts.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","AmountContainer","TextTotal","p","TextSubTitle","TextDescription","TEXTamount","SecContainer","hr","img","TextP","button","StyledButton","props","theme","body","fontsm","text","TextTitlee","CTNButton","Maxbtn","StyledRoundButton","StyledImg","LogoDiv","ResponsiveWrapper","StyledLogo","StyledLogoo","StyledLogooo","FAQ","Figure","Article","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","tokens","settokens","brd","setbrd","bxsh","setbxsh","setDOT","React","placement","errmessage","Notification","header","closable","txmessage","mntmessage","Loader","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","DISPLAY_COST","WL_Display","GAS_LIMIT","MAX_PER_TX","MARKETPLACE","MARKETPLACE_LINK","Telegram","Discord","Twitter","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","setAddress","substring","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","backgroundColor","alt","src","padding","Number","href","target","textAlign","color","fontFamily","border","boxShadow","lineHeight","disabled","onClick","e","preventDefault","newtokens","decrementtokens","incrementtokens","toString","price","Web3","utils","toWei","gasLimit","totalGasLimit","String","toaster","push","mint","send","to","from","value","once","err","then","receipt","claimNFTs","speed","content","fontSize","transform","id","PanelGroup","width","borderColor","accordion","bordered","Panel","Second","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","VT323","RenoMono","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9a52792.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: #1a1a1a;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const AmountContainer = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: center;\n  justify-content: center;\n  align-items: center;\n  //border: 2px solid #A673EF;\n  border-radius: 10px;\n  //box-shadow: 0px 0px 3px 0px #A673EF;\n`;\n\n\nexport const TextTitle = styled.p`\n  font-family: 'VT323';\n  color: black;\n  font-size: 30px;\n  font-weight: 400;\n\n  line-height: 1.6;\n  text-align: center;\n  @media (max-width: 565px) {\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextSub = styled.p`\n  font-family: 'VT323';\n  color: black;\n  font-size: 24px;\n  font-weight: 400;\n  letter-spacing: 8px;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 20px;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextTotal = styled.p`\n  font-family: 'VT323';\n  color: black;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 2px;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 0.75rem;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextPrice = styled.p`\n  font-family: 'VT323';\n  color: black;\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 8px;\n  line-height: 1.6;\n  border: 2px solid midnightblue;\n  width: 400px;\n  background: #9DC5F0;\n  text-align: center;\n  @media (max-width: 565px) {\n    font-size: 20px;\n    letter-spacing: 2px;\n    width: 200px;\n  }\n`;\n\nexport const TextSubTitle = styled.p`\n  font-family: 'Renomono';\n  color: black;\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 0.75rem;\n    letter-spacing: 2px;\n    text-align: center;\n  }\n`;\n\nexport const TextDescription = styled.p`\n  color:black;\n  font-size: 26px;\n  line-height: 1.6;\n\n  @media (max-width: 89em){\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px;\n   \n  }\n  \n  @media (max-width: 80em){\n    font-size: 20px;\n    text-align: center;\n    letter-spacing: 2px;\n   \n  }\n  \n  @media (max-width: 70em){\n    font-size: 18px;\n    text-align: center;\n    letter-spacing: 2px; \n \n  }\n  \n  @media (max-width: 60em){\n    font-size: 18px;\n    text-align: center;\n    letter-spacing: 2px; \n \n  }\n  \n  @media (max-width: 50em){\n    font-size: 18px;\n    text-align: center;\n    letter-spacing: 2px; \n  \n  }\n  @media (max-width: 40em){\n    font-size: 15px;\n    text-align: center;\n    letter-spacing: 2px; \n  \n  \n  }\n  @media (max-width: 30em){\n    font-size: 15px;\n    text-align: center;\n    letter-spacing: 2px; \n   }\n`;\n\nexport const TEXTamount = styled.p`\n  color: black;\n  font-size: 30px;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 20px;\n    line-height: 0;\n  }\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const StyledHR = styled.hr`\n  border: 2px solid black;  \n  background-color: black;\n  border-radius: 2px;\n  width: 450px;\n  @media (max-width: 565px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--primary-text);\n  text-decoration: none;\n  margin-right: 5rem;\n  cursor: pointer;\n  :hover {\n    color: #FF8938;\n  }\n  @media (max-width: 565px) {\n    margin-right: 0.75rem;\n    margin-top: 1rem;\n  }\n`;\n\nexport const Icons = styled.img`\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    margin-right: 1.2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    :hover {\n      transform: scale(1.5);\n      transition: transform 0.5s;\n    }\n`;\n\nexport const HeaderDiv = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-right: 3.5rem;\n@media (max-width: 565px) {\n  margin-right: 0;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  flex-direction: column;\n}\n`;\n\nexport const socialDiv = styled.div`\ndisplay: flex;\nalign-items: center;\n@media (max-width: 565px) {\n  margin-right: 0;\n  margin-top: 20px;\n  flex-direction: row;\n}\n`;\n\nexport const Headerlinks = styled.div`\n    display: flex;\n    align-items: center;\n    @media (max-width: 565px) {\n      margin-top: 10px;\n      margin-bottom: 10px;\n    }\n`;\n\nexport const SecContainer = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: center;;\n  align-items: center;\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  margin-top: 5%;\n`;\n\nexport const TextP = styled.p`\ntext-align: center;\nfont-size: 1rem;\ncolor: black;\nletter-spacing: 1px;\nline-height: 2;\nwidth: 70%;\n`;\n\nexport const ExploreBTN = styled.button`\n  font-family: 'coder';\n  padding: 10px;\n  font-size: 1rem;\n  border-radius: 40px;\n  border: none;\n  background: linear-gradient(86.57deg, #D8AE43 6.92%, rgba(255, 92, 0, 0.79) 100.73%);\n  padding: 10px;\n  letter-spacing: 2px;\n  font-weight: bold;\n  color: black;\n  width: 270px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    color: black;\n  }\n  @media (max-width: 565px) {\n    width: 200px;\n    height: 50px;\n    font-size: 0.75rem;\n  }\n`;\n\nexport const imgContainer = styled.div`\n  display: flex;\n  background: #171717;\n  border-radius: 40px;\n  width: max-content;\n  margin-top: 5%;\n  align-items: center;\n    justify-content: center;\n    @media (max-width: 565px) {\n      width: 100%;\n    }\n`;\n\nexport const workContainer = styled.div`\n  display: flex;\n  margin-top: 5%;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  gap: 5%;\n  @media (max-width: 565px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Box = styled.div`\nheight: 120px;\nwidth: 250px;\nborder-radius: 20px;\nbackground: #171717;\npadding: 10px;\n@media (max-width: 565px) {\n  margin-top: 10px;\n}\n:hover {\n  transform: scale(1.2);\n}\n\n`;\n\nexport const innerbox = styled.div`\n    flex-direction: row;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n    padding: 10px;\n`;\n\nexport const innerIcons = styled.img`\n    width: 45px;\n    height: 45px;\n    border-radius: 50%;\n    margin-right: 1.2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n`;\n\nexport const TextPBOX = styled.p`\ntext-align: left;\nwidth: 125px;\nfont-size: 1rem;\n`;\n\nexport const Textbox = styled.p`\ntext-align: left;\nfont-size: 0.75rem;\n`;\n\nexport const CBOX = styled.div`\nwidth: 30%;\n@media (max-width: 565px) {\n  width: 80%;\n}\n`;","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport 'rsuite/styles/index.less';\nimport \"rsuite/dist/rsuite.min.css\";\nimport { Panel, PanelGroup } from 'rsuite';\nimport { Carousel } from 'rsuite';\nimport { Notification, toaster } from 'rsuite';\nimport { Loader } from 'rsuite';\nimport { Badge } from 'rsuite';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\ndisplay: inline-block;\nbackground-color: red;\nfont: \"Josefin Sans\";\ncolor: ${props => props.theme.body};\noutline: none;\nborder: none;\n\nfont-size: ${props => props.theme.fontsm};\npadding: 0.9rem 2.3rem;\nborder-radius: 50px;\ncursor: pointer;\ntransition: all 0.2s ease;\nposition: relative;\nalign-items: center;\njustify-content: center;\nalign-content: center;\n&:hover{\n    transform: scale(0.9);\n}\n\n&::after{\n    content: ' ';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    border: 2px solid ${props => props.theme.text};\n    width: 100%;\n    height: 100%;\n    border-radius: 50px;\n    transition: all 0.2s ease;\n}\n\n&:hover::after{\n    transform: translate(-50%, -50%) scale(1);\n    padding: 0.3rem;\n}\ntransition: width 0.5s;\n`\n\nexport const TextTitle = styled.p`\n  font-family: 'VT323';\n  color: black;\n  font-size: 20px;\n  font-weight: 400;\n\n  line-height: 1.6;\n  text-align: center;\n  @media (max-width: 565px) {\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px;\n  }\n  transition: width 0.5s;;\n`;\n\nexport const TextTitlee = styled.p`\n  font-family: 'VT323';\n  color: black;\n  font-size: 20px;\n  font-weight: 400;\n\n  line-height: 1.6;\n  text-align: center;\n\n  @media (max-width: 89em){\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px;\n   \n  }\n  \n  @media (max-width: 80em){\n    font-size: 20px;\n    text-align: center;\n    letter-spacing: 2px;\n   \n  }\n  \n  @media (max-width: 70em){\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px; \n \n  }\n  \n  @media (max-width: 60em){\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px; \n \n  }\n  \n  @media (max-width: 50em){\n    font-size: 20px;\n    text-align: center;\n    letter-spacing: 2px; \n  \n  }\n  @media (max-width: 40em){\n    font-size: 15px;\n    text-align: center;\n    letter-spacing: 2px; \n  \n  \n  }\n  @media (max-width: 30em){\n    font-size: 15px;\n    text-align: center;\n    letter-spacing: 2px; \n   }\n  \n\n   transition: width 0.5s;\n  \n`;\n\n\nexport const CTNButton = styled.button`\ndisplay: inline-block;\nbackground-color: white;\nfont: \"Josefin Sans\";\ncolor: ${props => props.theme.body};\noutline: none;\nborder: black solid;\n\n\nfont-size: ${props => props.theme.fontsm};\npadding: 0.9rem 2.3rem;\nborder-radius: 5px;\ncursor: pointer;\ntransition: all 0.2s ease;\nposition: relative;\n&:hover{\n    transform: scale(0.9);\n}\n\n&::after{\n    content: ' ';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    border: 2px solid orange;\n    width: 100%;\n    height: 100%;\n    border-radius: 5px;\n    transition: all 0.2s ease;\n}\n\n&:hover::after{\n    transform: translate(-50%, -50%) scale(1);\n    padding: 0.3rem;\n}\ntransition: width 0.5s;\n`\n\nexport const Maxbtn = styled.button`\ndisplay: inline-block;\nbackground-color: black;\nfont: \"Josefin Sans\";\ncolor: ${props => props.theme.body};\noutline: none;\nwidth: 50%;\nborder: none;\nalign-items: center;\njustify-content: center;\nalign-content: center;\n\nfont-size: ${props => props.theme.fontsm};\npadding: 0.9rem 2.3rem;\nborder-radius: 50px;\ncursor: pointer;\ntransition: all 0.2s ease;\nposition: relative;\n&:hover{\n    transform: scale(0.9);\n}\n\n&::after{\n    content: ' ';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    border: 2px solid ${props => props.theme.text};\n    width: 100%;\n    height: 100%;\n    border-radius: 50px;\n    transition: all 0.2s ease;\n}\n\n&:hover::after{\n    transform: translate(-50%, -50%) scale(1);\n    padding: 0.3rem;\n}\n`\n\nexport const StyledRoundButton = styled.button`\ndisplay: inline-block;\nbackground-color: red;\nfont: \"Josefin Sans\";\ncolor: ${props => props.theme.body};\noutline: none;\nborder: none;\nalign-items: center;\njustify-content: center;\nalign-content: center;\nfont-size: ${props => props.theme.fontsm};\npadding: 0.9rem 2.3rem;\nborder-radius: 50px;\ncursor: pointer;\ntransition: all 0.2s ease;\nposition: relative;\n&:hover{\n    transform: scale(0.9);\n}\n\n&::after{\n    content: ' ';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    border: 2px solid ${props => props.theme.text};\n    width: 100%;\n    height: 100%;\n    border-radius: 50px;\n    transition: all 0.2s ease;\n}\n\n&:hover::after{\n    transform: translate(-50%, -50%) scale(1);\n    padding: 0.3rem;\n}\n`\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 3px 11px 1px rgba(0, 0, 0, 2);\n  border: 4px solid black;\n  background-color: var(--accent);\n  border-radius: 10px;\n  width: 180px;\n  flex-direction: column;\n\n  @media (min-width: 700px) {\n    width: 160px;\n  }\n\n  @media (min-width: 900px) {\n    width: 150px;\n  }\n\n  @media (min-width: 1000px) {\n    width: 200px;\n  }\n\n  @media (min-width: 1300px) {\n    width: 200px;\n  }\n\n  @media (min-width: 1500px) {\n    width: 250px;\n  }\n  transition: width 0.5s;\n`;\n\n\nexport const LogoDiv = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nalign-content: center;\ngap: 10%;\nwidth: 300px;\n`;\n\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\n\nexport const ResponsiveWrapperr = styled.div`\nbackground: beige;\npadding: 30;\nflex-direction: center;\nalign-items: center;\njustify-content: center;\nalign-content: center;\n\n\nborder: 40px;\nborder: solid;\nborder-radius: 30px;\nboxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\";\n \n  @media (min-width: 367px) {\n   flex-direction: row;\n    \n  }\n`;\n\nexport const ResponsiveWrapperHeader = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-height: 80px;\n  \n  padding: 10px;\n  background-color : beige;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n  @media (max-width: 565px) {\n    max-height: 220px;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  display: inline;\n  width: 650px;\n  @media (max-width: 1300px) {\n    width: 500px;\n    transition: width 0.5s;\n    transition: height 0.5s;\n  }\n\n  @media (max-width: 1000px) {\n    width: 500px;\n    transition: width 0.5s;\n    transition: height 0.5s;\n  }\n  @media (max-width: 767px) {\n    width: 450px;\n    transition: width 0.5s;\n    transition: height 0.5s;\n  }\n\n  @media (max-width: 567px) {\n    width: 350px;\n    transition: width 0.5s;\n    transition: height 0.5s;\n  }\n  transition: width 0.5s;\n`;\n\n\n\n\n\n\n\nexport const Styledroad = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  transition: width 0.5s;\n`;\n\nexport const StyledImgSmall = styled.img`\n  width: 220px;\n  height: 220px;\n  border-radius: 5px;\n  @media (min-width: 900px) {\n    width: 220px;\n    height: 220px;\n  }\n  @media (min-width: 1000px) {\n    width: 220px;\n    height: 220px;\n  }\n  transition: width 0.5s;\n  @media (max-width: 565px) {\n    width: 200px;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nexport const WalletBox = styled.div`\n  text-decoration: none;\n  border-radius: 5px;\n  border: 2px solid black;\n  background-color: White;\n  //padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  width: 180px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 1px 0px 1px black;\n  -webkit-box-shadow: 0px 1x 0px 1px black;\n  -moz-box-shadow: 0px 1x 0px 1px  black;\n  @media (max-width: 565px) {\n    margin-top: 20px;\n  \n`;\n\nexport const StyledLogoo = styled.img`\n  display: inline;\n  width: 450px;\n\n  @media (max-width: 89em){\n    width: 450px; \n   \n  }\n  \n  @media (max-width: 80em){\n    width: 400px; \n   \n  }\n  \n  @media (max-width: 70em){\n    width: 340px; \n \n  }\n  \n  @media (max-width: 60em){\n    width: 300px; \n \n  }\n  \n  @media (max-width: 50em){\n    width: 300px; \n  \n  }\n  @media (max-width: 40em){\n    width: 300px; \n  \n  \n  }\n  @media (max-width: 30em){\n    width: 300px; \n   }\n  \n  @media (max-width: 767px) {\n    width: 280px;\n   \n  }\n\n  @media (max-width: 567px) {\n    width: 250px;\n  \n  }\n  transition: width 0.5s;\n`;\n\n\nexport const StyledLogooo = styled.img`\n  display: inline;\n  width: 800px;\n\n  @media (max-width: 89em){\n    width: 750px; \n   \n  }\n  \n  @media (max-width: 80em){\n    width: 700px; \n   \n  }\n  \n  @media (max-width: 70em){\n    width: 600px; \n \n  }\n  \n  @media (max-width: 60em){\n    width: 600px; \n \n  }\n  \n  @media (max-width: 50em){\n    width: 600px; \n  \n  }\n  @media (max-width: 40em){\n    width: 600px; \n  \n  \n  }\n  @media (max-width: 30em){\n    width: 600px; \n   }\n  \n  @media (max-width: 767px) {\n    width: 500px;\n   \n  }\n\n  @media (max-width: 567px) {\n    width: 370px;\n    height: 88px;\n  \n  }\n  transition: width 0.5s;\n`;\n\nexport const FAQ = styled.img`\n  display: inline;\n  width: 150px;\n\n  @media (max-width: 89em){\n    width: 150px; \n   \n  }\n  \n  @media (max-width: 80em){\n    width: 150px; \n   \n  }\n  \n  @media (max-width: 70em){\n    width: 150px; \n \n  }\n  \n  @media (max-width: 60em){\n    width: 150px; \n \n  }\n  \n  @media (max-width: 50em){\n    width: 150px; \n  \n  }\n  @media (max-width: 40em){\n    width: 130px; \n  \n  \n  }\n  @media (max-width: 30em){\n    width: 120px; \n   }\n\n  }\n  transition: width 0.5s;\n`;\n\nconst Figure = styled.div`\nwidth: 510px; \nheight: 400px;\nbox-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 2);\n\n\nbackground-color: beige;\nborder-radius: 5px;\nflex-direction: center;\nalign-items: center;\njustify-content: center;\nalign-content: center;\ndisplay: flex;\nflex-direction: column;\n  justify-content: center\n\n\n\n@media (max-width: 89em){\n  width: 500px; \n  height: 400px;\n}\n\n@media (max-width: 80em){\n  width: 450px; \n  height: 390px;\n}\n\n@media (max-width: 70em){\n  width: 370px; \n  height: 350px;\n}\n\n@media (max-width: 60em){\n  width: 350px; \n  height: 320px;\n}\n\n@media (max-width: 50em){\n  width: 350px; \n  height: 320px;\n  flex-direction: column;\n  justify-content: center\n}\n@media (max-width: 40em){\n  width: 300px; \n  height: 320px;\n  flex-direction: column;\n  justify-content: center\n\n}\n@media (max-width: 30em){\n  width: 300px; \n  height: 320px;\n  flex-direction: column;\n  justify-content: center\n\n}\n\ntransition: width 0.5s;\n\n\n\n`\n\nconst Article = styled.div`\ndisplay: flex;\nwidth\nflex-flow: row wrap;\nmargin-bottom: 4em;\n\n\n@media (max-width: 89em){\n\n}\n\n@media (max-width: 80em){\n\n}\n\n@media (max-width: 70em){\n \n}\n\n@media (max-width: 60em){\n \n}\n\n@media (max-width: 65em){\n  \n  display: flex;\n  flex-direction: flex;\n  justify-content: center;\n  align-items: center;\n}\n@media (max-width: 59em){\n\n  flex-direction: column;\n  justify-content: center;\n\n}\n@media (max-width: 30em){\n\n  flex-direction: column;\n  justify-content: center;\n\n\n}\n\n\n\n\n`\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n \n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(``);\n  const [tokens, settokens] = useState(1);\n  const [brd, setbrd] = useState(\"2px solid #FFFFFF\");\n  const [bxsh, setbxsh] = useState(\"0px 0px 3px 0px #FFFFFF\");\n  const [DOT, setDOT] = useState(\"red\");\n  const [type, setType] = React.useState('info');\n  const [placement, setPlacement] = React.useState('topStart');\n  const errmessage = (\n    <Notification type={'error'} header={'error'} closable>\n     Sorry, something went wrong please try again later.\n    </Notification>\n  );\n  const txmessage = (\n    <Notification type={'success'} header={'success'} closable>\n     Congrats, Mint Was successfull.\n    </Notification>\n  );\n  const mntmessage = (\n    <Notification type={'info'} header={'success'} closable>\n     <Loader/> Minting in Progress....\n    </Notification>\n  );\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    DISPLAY_COST: 0,\n    WL_Display: 0,\n    GAS_LIMIT: 0,\n    MAX_PER_TX: 0,\n\n    \n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    Telegram: \"\",\n    Discord: \"\",\n    Twitter: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n\n    let cost = CONFIG.DISPLAY_COST * tokens;\n    ///let cost = (CONFIG.freetokens - tokens) * CONFIG.DISPLAY_COST\n    \n    let price = Web3.utils.toWei(cost.toString(), 'ether');\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Cost: \", price);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    setbrd(\"2px solid yellow\");\n    setbxsh(\"0px 0px 3px 0px yellow\");\n    toaster.push(mntmessage, { placement })\n    blockchain.smartContract.methods\n      .mint(tokens)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: price,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n        toaster.push(errmessage, { placement })\n        setbrd(\"2px solid red\");\n        setbxsh(\"0px 0px 3px 0px red\");\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        toaster.push(txmessage, { placement })\n        setbrd(\"2px solid green\");\n        setbxsh(\"0px 0px 3px 0px green\");\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementtokens = () => {\n    let newtokens = tokens - 1;\n    if (newtokens < 1) {\n      newtokens = 1;\n    }\n    settokens(newtokens);\n  };\n\n  const incrementtokens = () => {\n    let newtokens = tokens + 1;\n    if (newtokens > CONFIG.MAX_PER_TX) {\n      newtokens = CONFIG.MAX_PER_TX;\n    }\n    settokens(newtokens);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\n      setDOT(\"green\");\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      \n   \n\n\n\n     \n        \n        <s.Container flex={1} jc={\"center\"} ai={\"center\"}   style={{backgroundColor: \"beige\" }}  >\n\n       \n \n         \n    \n\n      \n    \n      \n        <LogoDiv>\n        \n        \n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n         \n         \n          </LogoDiv>\n          </s.Container>\n         \n          <s.Container\n        flex={1}\n         ai={\"center\"}\n        style={{backgroundColor: \"lightblue\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <s.SpacerLarge />\n       \n\n\n\n          <ResponsiveWrapper flex={1} style={{ padding: 40 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/13.jpg\"} />\n          </s.Container>\n          \n          <s.SpacerLarge />\n         \n     \n\n        \n       \n          <s.SpacerLarge />\n      \n        <s.SpacerSmall/>\n        <Article>\n        <Figure>\n            \n\n\n\n           {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n              \n              </>\n            ) : (\n              <>\n             \n\n                        <LogoDiv>\n       \n       \n            <StyledLogoo alt={\"logo\"} src={\"/config/images/mintlive.png\"} />\n        \n        \n          </LogoDiv>\n\n          <s.SpacerLarge />\n            \n   \n                    <s.SpacerSmall />\n                    <a href=\"https://freee-6hrkx9p1d-moderndeveloper1.vercel.app/\" target={\"_blank\"}>\n                    <CTNButton\n                     \n                    >\n                      Free mint \n                 \n                    </CTNButton>\n                    </a>\n                    <s.SpacerSmall />\n                    <a href=\"https://public-2kdtz7bt9-moderndeveloper1.vercel.app/\" target={\"_blank\"}>\n                    <CTNButton\n                    \n                    >\n                      Public Mint\n                      \n                    </CTNButton>\n                    </a>\n                <s.SpacerMedium/>\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <>\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.SpacerSmall />\n                    \n                   \n                      <>\n                       \n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                            fontFamily: \"VT323\",\n                            \n                          }}\n                        > Click selected box to mint\n                         \n                        </s.TextDescription>\n                      </>\n                   \n                  </s.Container>\n                  </>\n                ) : (\n                  <>\n                    <s.AmountContainer style={{\n                      border: brd,\n                      boxShadow: bxsh,\n                    }}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementtokens();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.TEXTamount>\n                        &ensp;&ensp;&ensp;&ensp;{tokens}&ensp;&ensp;&ensp;&ensp;\n                      </s.TEXTamount>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementtokens();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.AmountContainer>\n                    <s.SpacerSmall />\n                    <Maxbtn\n                        onClick={(e) => {\n                          e.preventDefault();\n                          settokens(CONFIG.MAX_PER_TX);\n                        }}\n                        >\n                      SetMax\n                    </Maxbtn>\n                    <s.SpacerSmall />\n                    <s.SpacerSmall />\n                    <s.TextTotal style={{color: \"black\"}}>\n                      Total&emsp;&emsp;&emsp;&emsp;&emsp;{(CONFIG.DISPLAY_COST * tokens).toString().substring(0, 6)}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                    </s.TextTotal>\n                    <s.SpacerSmall />\n                    <s.SpacerXSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"column\"}>\n                            <StyledButton\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              claimNFTs();\n                              getData();\n                            }}\n                          >\n                            {claimingNft ? <Loader speed=\"fast\" content=\"Minting...\" /> : \"MINT\"} \n                          </StyledButton>\n                    </s.Container>\n                    <s.SpacerXSmall/>\n                    <s.TextSubTitle style={{fontSize: 15}}>\n                    Max {CONFIG.MAX_PER_TX} Per Tx\n                    </s.TextSubTitle>\n                    <s.SpacerXSmall/>\n                    <s.TextSubTitle style={{textAlign: \"center\", fontSize: \"1rem\"}}>\n                    {feedback}\n                    </s.TextSubTitle>\n              </>\n            )}\n            </>\n            )}\n            </Figure>\n            </Article>\n            <s.SpacerMedium />\n            \n           \n          \n          <s.SpacerLarge />\n          \n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/OG.jpg\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n\n\n          <s.Container/>\n        </ResponsiveWrapper>\n      \n       \n\n\n        <s.SpacerLarge />\n        \n        <s.SecContainer flex={1}\n         ai={\"center\"}\n        style={{backgroundColor: \"beige\" }} id=\"story\">\n          <s.SpacerXSmall/>\n    \n          <LogoDiv>\n        \n        \n            <StyledLogooo alt={\"logo\"} src={\"/config/images/welcome.png\"} />\n   \n   \n          </LogoDiv>\n       \n            <s.TextP>\n            <TextTitlee>\n            The m00n m00se is a collection of 4444 unique NFTs collectibles, inspired by the famous MoonBirds and y00ts.\n            </TextTitlee>\n            <TextTitlee>\nm00n m00se pays tribute to the OG MoonBirds by matching PixelArt. Guess why? Y00ts on eth can only m00n!\n</TextTitlee>        \n</s.TextP>\n\n<s.SpacerLarge/>\n<s.SpacerLarge/>\n            </s.SecContainer>\n\n            \n            \n              <s.SecContainer id=\"faq\">\n              <LogoDiv>\n        \n        \n            <FAQ alt={\"logo\"} src={\"/config/images/faq.png\"} />\n     \n     \n          </LogoDiv>\n            <s.SpacerLarge/>\n            <PanelGroup style={{width: \"80%\", borderColor: \"black\", color: \"black\" }} accordion bordered>\n    <Panel  header=\"How to buy a NFT?\" >\n    <s.TextP style={{textAlign: \"left\"}}>\n          \n\n\nPurchase Ethereum from various exchanges, such as Coinbase or Binance - Send Ethereum from this exchange to your MetaMask wallet - When it is time to mint, open the website and select the number of NFTs you wish to purchase - Click \"MINT\" button, Metamask will popup asking for connection - Confirm the transaction and any associated fees.\n          </s.TextP>\n    </Panel>\n    \n    \n    <Panel header=\"Where can i view my NFTs?\">\n    <s.TextP style={{textAlign: \"left\"}}>\n    Once minted or bought, simply connect to your OpenSea account to view your NFTs\n          </s.TextP>\n    </Panel>\n    <Panel header=\"How many NFTs are there?\">\n    <s.TextP style={{textAlign: \"left\"}}>\n    A total of 4444 unique m00n m00se NFTs will be created.\n          </s.TextP>\n    </Panel>\n    <Panel header=\"What are we working next?\">\n    <s.TextP style={{textAlign: \"left\"}}>\n    We continue to grow our community, oganize giveaways and promotions on social networks. We also start working on rewards for holders. Airdrop NFT Collection already in production\n          </s.TextP>\n    </Panel>\n    \n  </PanelGroup>\n            </s.SecContainer>\n\n\n\n            <s.SecContainer flex={1}\n         ai={\"center\"}\n        style={{backgroundColor: \"beige\" }}id=\"\">\n                \n          <s.SpacerLarge/>\n          <s.SpacerMedium />\n          <s.TextP>\n          Copyright © 2022 m00n m00se\n          </s.TextP>\n          <s.SpacerMedium />\n          <s.SpacerMedium />\n          \n\n            </s.SecContainer>\n\n\n\n\n        \n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  font-family: 'VT323';\n  padding: 10px;\n  font-size: 24px;\n  border-radius: 6px;\n  border: none;\n  background-color: #fff;\n  padding: 10px;\n  letter-spacing: 6px;\n  // font-weight: bold;\n  color: #7167E3;\n  width: 450px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: #fff;\n  padding: 10px;\n  // font-weight: bold;\n  font-size: 50px;\n  color: #7167E3;\n  width: 60px;\n  height: 60px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  // margin: auto;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ResponsiveWrapperHeader = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  display: inline;\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  // border: 4px dashed var(--secondary);\n  // background-color: var(--accent);\n  // border-radius: 100%;\n  width: 300px;\n  @media (min-width: 900px) {\n    width: 350px;\n  }\n  @media (min-width: 1000px) {\n    width: 400px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nexport const WalletBox = styled.div`\n  text-decoration: none;\n  border-radius: 10px;\n  border: 2px solid black;\n  background-color: #7167E3;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  width: 250px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n`;\n\nfunction Second() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [walletAddress, setAddress] = useState(\"No connection\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    WEB_LINK: \"\",\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        // ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg_minting.png\" : null}\n      >\n        <ResponsiveWrapperHeader>\n          <a href={CONFIG.WEB_LINK}>\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo_minting.png\"} />\n          </a>\n          <WalletBox>\n            {blockchain.account !== \"\" ? (\n            <>\n            <s.TextSubTitle>\n              {walletAddress}\n              </s.TextSubTitle>\n            </>\n            ) : null }\n          </WalletBox>\n        </ResponsiveWrapperHeader>\n\n        <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          <s.TextTitle> PUBLIC SALE </s.TextTitle>\n        </s.Container>\n    \n        <s.SpacerSmall />\n\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n            \n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n              <StyledImg alt={\"Gadjah with the duck\"} src={\"/config/images/unr_nft.png\"} />\n            </s.Container>\n            {/* <s.SpacerLarge /> */}\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\n            <s.StyledHR></s.StyledHR>\n            <s.SpacerSmall />\n            {/* <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle> */}\n            {/* <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription> */}\n            {/* <span\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <StyledButton\n                onClick={(e) => {\n                  window.open(\"/config/roadmap.pdf\", \"_blank\");\n                }}\n                style={{\n                  margin: \"5px\",\n                }}\n              >\n                Roadmap\n              </StyledButton>\n              <StyledButton\n                style={{\n                  margin: \"5px\",\n                }}\n                onClick={(e) => {\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                }}\n              >\n                {CONFIG.MARKETPLACE}\n              </StyledButton>\n            </span> */}\n            {/* <s.SpacerSmall /> */}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextSub>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\n                >\n                  Price&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                </s.TextSub>\n                <s.SpacerSmall />\n                <s.StyledHR></s.StyledHR>\n                <s.SpacerXSmall />\n                {/* <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription> */}\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {/* Connect to the {CONFIG.NETWORK.NAME} network                       */}\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT TO METAMASK\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.TextDescription\n                        style={{\n                          fontFamily : \"VT323\",\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        &ensp;&ensp;&ensp;&ensp;{mintAmount}&ensp;&ensp;&ensp;&ensp;\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.StyledHR ></s.StyledHR>\n                    <s.SpacerSmall />\n                    <s.TextSub\n                      style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\n                    >\n                      Total&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST * mintAmount}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                    </s.TextSub>\n                    <s.SpacerSmall />\n                    <s.SpacerXSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"MINTING...\" : \"MINT NOW\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n            </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default Second;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/RenoMono.8b239c68.otf\";","export default __webpack_public_path__ + \"static/media/upheavtt.e3d365ba.ttf\";","import { createGlobalStyle } from 'styled-components'\nimport RenoMono from './fonts/RenoMono.otf'\nimport VT323 from './fonts/upheavtt.ttf';\n// import Gumball from './Gumball.ttf';\n\nconst GlobalStyle = createGlobalStyle`\n    @font-face {\n        font-family: 'VT323';\n        src: url(${VT323}) format('truetype');\n    }\n\n    @font-face {\n        font-family: 'Renomono';\n        src: url(${RenoMono}) format('opentype');\n    }\n`;\n\n// export const Renomono = createGlobalStyle`\n//     @font-face {\n//         font-family: 'Renomono';\n//         src: url(${RenoMono}) format('opentype');\n//     }\n// `;\n\nexport default GlobalStyle;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Second from \"./second\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport GlobalStyle from \"./fonts\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle />\n    <App />\n    \n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}